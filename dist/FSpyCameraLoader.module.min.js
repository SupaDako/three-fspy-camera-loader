import{Matrix4 as t,Vector3 as a,MathUtils as e,FileLoader as i,Loader as n,Vector2 as r,PerspectiveCamera as o}from"three";var s=function(t,a){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,a){t.__proto__=a}||function(t,a){for(var e in a)a.hasOwnProperty(e)&&(t[e]=a[e])})(t,a)};var h=1,c=50,u=1,p=function(){function i(){this.data=null,this.internalImageRatio=h,this.internalCameraFov=c,this.radian=0,this.internalRotationMatrix=new t,this.internalCameraPosition=new a,this.internalIsSetData=!1}return i.prototype.setData=function(t){this.internalIsSetData=!0,this.data=t,this.onSetData()},i.prototype.removeData=function(){this.internalIsSetData=!1,this.data=null,this.onRemoveData()},i.prototype.getData=function(){return this.data},i.prototype.onSetData=function(){this.internalImageRatio=this.calcImageRatio(),null!=this.data&&(this.internalCameraFov=this.getVFovDegFromRad(this.data.verticalFieldOfView),this.setMatrix(),this.setCameraPosition())},i.prototype.onRemoveData=function(){this.internalImageRatio=h,this.internalCameraFov=c,this.internalRotationMatrix=new t,this.internalCameraPosition=new a},i.prototype.calcImageRatio=function(){return null!=this.data?this.data.imageWidth/this.data.imageHeight:h},i.prototype.getVFovDegFromRad=function(t){return this.radian=e.radToDeg(t),this.radian},i.prototype.setMatrix=function(){if(null!=this.data){var a=this.data.cameraTransform.rows.reduce((function(t,a){return t.push.apply(t,a),t}),[]);return this.internalRotationMatrix.elements=a,this.internalRotationMatrix}return new t},i.prototype.setCameraPosition=function(){if(null!=this.data){var t=this.data.cameraTransform.rows;this.internalCameraPosition=new a(t[0][3],t[1][3],t[2][3])}},Object.defineProperty(i.prototype,"imageRatio",{get:function(){return this.internalImageRatio},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"rotationMatrix",{get:function(){return this.internalRotationMatrix},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"cameraFov",{get:function(){return this.internalCameraFov},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"cameraPosition",{get:function(){return this.internalCameraPosition},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isSetData",{get:function(){return this.internalIsSetData},enumerable:!0,configurable:!0}),i}(),l=function(t){function a(a){var e=t.call(this)||this;return n.call(e,a),e.targetCanvas=null,e.targetCanvasRect=null,e.targetCanvasSize=new r,e.camera=new o,e.dataManager=new p,e}return function(t,a){function e(){this.constructor=t}s(t,a),t.prototype=null===a?Object.create(a):(e.prototype=a.prototype,new e)}(a,t),a.prototype.load=function(t,a,e,n){var r=this,o=new i(this.manager);o.setPath(this.path),o.setResponseType("json"),o.load(t,(function(t){var e=t;a(r.parse(e))}),e,n)},a.prototype.parse=function(t){return this.dataManager.setData(t),this.createCamera(),this.camera},a.prototype.setCanvas=function(t){this.targetCanvas=t},a.prototype.removeCanvas=function(){this.targetCanvas=null},a.prototype.setResizeUpdate=function(t){t&&this.setCanvas(t),window.addEventListener("resize",this.onResize.bind(this))},a.prototype.removeResizeupdate=function(t){t&&this.removeCanvas(),window.removeEventListener("resize",this.onResize.bind(this))},a.prototype.createCamera=function(){this.dataManager.isSetData&&(this.camera.fov=this.dataManager.cameraFov,null!=this.targetCanvasSize?this.camera.aspect=this.targetCanvasSize.x/this.targetCanvasSize.y:this.camera.aspect=h,this.camera.position.set(this.dataManager.cameraPosition.x,this.dataManager.cameraPosition.y,this.dataManager.cameraPosition.z),this.camera.setRotationFromMatrix(this.dataManager.rotationMatrix),this.onResize())},a.prototype.onResize=function(){if(null!=this.targetCanvas){this.targetCanvasRect=this.targetCanvas.getBoundingClientRect();var t=this.dataManager.imageRatio;this.targetCanvasSize.setX(this.targetCanvasRect.width),this.targetCanvasSize.setY(this.targetCanvasRect.height),this.targetCanvasSize.x/this.targetCanvasSize.y<=t?(this.camera.aspect=this.targetCanvasSize.x/this.targetCanvasSize.y,this.camera.zoom=u):(this.camera.aspect=this.targetCanvasSize.x/this.targetCanvasSize.y,this.camera.zoom=this.targetCanvasSize.x/this.targetCanvasSize.y/t),this.camera.updateProjectionMatrix()}},a}(n);export default l;
